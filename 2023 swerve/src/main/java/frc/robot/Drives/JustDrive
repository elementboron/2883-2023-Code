package frc.robot.drives;

import com.kauailabs.navx.frc.AHRS;
import com.swervedrivespecialties.swervelib.Mk4iSwerveModuleHelper;
import com.swervedrivespecialties.swervelib.SdsModuleConfigurations;
import com.swervedrivespecialties.swervelib.SwerveModule;

import edu.wpi.first.math.geometry.Rotation2d;
import edu.wpi.first.math.geometry.Translation2d;
import edu.wpi.first.math.kinematics.ChassisSpeeds;
import edu.wpi.first.math.kinematics.SwerveDriveKinematics;
import edu.wpi.first.math.kinematics.SwerveModuleState;
import edu.wpi.first.wpilibj.SPI;
import edu.wpi.first.wpilibj.shuffleboard.BuiltInLayouts;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj.shuffleboard.ShuffleboardTab;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj2.command.CommandBase;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.Constants;
import frc.robot.Drivetrain;
public class JustDrive extends CommandBase {
  private final Drivetrain mDrivetrain = new Drivetrain();
    private final double ax;
    private final double ay;
    private final double az;

}

public JustDrive(double x, double y, double z){
  private final double ax;
    private final double ay;
    private final double az;
  x=ax;
  ay = y;
  az = z;
  mDrivetrain.setDefaultCommand(new DrivetrainTeleOp(
  mDrivetrain,
  () -> -modifyAxis(ax) * AutoConstants.kMaxSpeedMetersPerSecond,
  () -> -modifyAxis(ay) * Drivetrain.MAX_VELOCITY_METERS_PER_SECOND,
  () -> -modifyAxis(az) * Drivetrain.MAX_ANGULAR_VELOCITY_RADIANS_PER_SECOND));

configureBindings();


}